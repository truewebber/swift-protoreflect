/**
 * üîç SwiftProtoReflect Example: Basic Descriptors and Metadata
 *
 * –û–ø–∏—Å–∞–Ω–∏–µ: –î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞–º–∏ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 * –ö–ª—é—á–µ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏: Descriptors, Metadata, Field Navigation, Type Introspection
 * –°–ª–æ–∂–Ω–æ—Å—Ç—å: üîß –°—Ä–µ–¥–Ω–∏–π
 * –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: < 15 —Å–µ–∫—É–Ω–¥
 *
 * –ß—Ç–æ –∏–∑—É—á–∏—Ç–µ:
 * - –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∏–µ—Ä–∞—Ä—Ö–∏–∏ FileDescriptor -> MessageDescriptor -> FieldDescriptor
 * - –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—è—Ö –∏ –∏—Ö —Ç–∏–ø–∞—Ö
 * - –†–∞–±–æ—Ç–∞ —Å EnumDescriptor –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
 * - –ò–Ω—Ç—Ä–æ—Å–ø–µ–∫—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π
 * - –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–∏–ø–∞–º–∏
 *
 * –ó–∞–ø—É—Å–∫:
 *   swift run BasicDescriptors
 */

import ExampleUtils
import Foundation
import SwiftProtoReflect

@main
struct BasicDescriptorsExample {
  static func main() throws {
    ExampleUtils.printHeader("–î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ç—Ä–æ—Å–ø–µ–∫—Ü–∏—è")

    try step1UfileDescriptorNavigation()
    try step2UmessageDescriptorDetails()
    try step3UfieldDescriptorAnalysis()
    try step4UenumDescriptorExploration()
    try step5UtypeRelationships()

    ExampleUtils.printSuccess("–í—ã –æ—Å–≤–æ–∏–ª–∏ —Ä–∞–±–æ—Ç—É —Å –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞–º–∏ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ Protocol Buffers!")

    ExampleUtils.printNext([
      "–°–ª–µ–¥—É—é—â–∏–π: complex-messages.swift - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
      "–ö–∞—Ç–µ–≥–æ—Ä–∏—è 02: dynamic-messages.swift - —Å–ª–æ–∂–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏",
      "–ò–∑—É—á–∏—Ç–µ: serialization-basics.swift - —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è",
    ])
  }

  // MARK: - Implementation Steps

  private static func step1UfileDescriptorNavigation() throws {
    ExampleUtils.printStep(1, "–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ FileDescriptor")

    let fileDescriptor = try createComprehensiveFileStructure()

    // –ê–Ω–∞–ª–∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
    ExampleUtils.printTable(
      [
        "File Name": fileDescriptor.name,
        "Package": fileDescriptor.package,
        "Full Package Name": "\(fileDescriptor.package).\(fileDescriptor.name)",
        "Messages Count": "\(fileDescriptor.messages.count)",
        "Enums Count": "\(fileDescriptor.enums.count)",
      ],
      title: "File Descriptor Info"
    )

    print("\n  üèó  –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞:")

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º
    print("    üìã Messages:")
    for message in fileDescriptor.messages.values {
      print("      ‚Ä¢ \(message.name) (\(message.fields.count) fields)")
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ enums
    print("    üè∑  Enums:")
    for enumDesc in fileDescriptor.enums.values {
      print("      ‚Ä¢ \(enumDesc.name) (\(enumDesc.allValues().count) values)")
    }

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ –∏–º–µ–Ω–∏
    if let userMessage = fileDescriptor.messages.values.first(where: { $0.name == "User" }) {
      print("\n  üîç –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ User:")
      print("      Full name: \(userMessage.fullName)")
      print("      Parent file: \(fileDescriptor.name)")
    }
  }

  private static func step2UmessageDescriptorDetails() throws {
    ExampleUtils.printStep(2, "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ MessageDescriptor")

    let fileDescriptor = try createComprehensiveFileStructure()

    guard let userMessage = fileDescriptor.messages.values.first(where: { $0.name == "User" }) else {
      throw NSError(domain: "Example", code: 1, userInfo: [NSLocalizedDescriptionKey: "User message not found"])
    }

    print("  üìã –ê–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è User:")

    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    ExampleUtils.printTable(
      [
        "Name": userMessage.name,
        "Full Name": userMessage.fullName,
        "Fields Count": "\(userMessage.fields.count)",
        "Parent Type": "FileDescriptor",
      ],
      title: "Message Details"
    )

    // –ê–Ω–∞–ª–∏–∑ –ø–æ–ª–µ–π –ø–æ —Ç–∏–ø–∞–º
    var fieldsByType: [String: [FieldDescriptor]] = [:]
    for field in userMessage.fields.values {
      let typeName = "\(field.type)"
      if fieldsByType[typeName] == nil {
        fieldsByType[typeName] = []
      }
      fieldsByType[typeName]?.append(field)
    }

    print("\n    üìä –ü–æ–ª—è –ø–æ —Ç–∏–ø–∞–º:")
    for (type, fields) in fieldsByType.sorted(by: { $0.key < $1.key }) {
      print("      \(type): \(fields.map { $0.name }.joined(separator: ", "))")
    }

    // –ü–æ–∏—Å–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    let repeatedFields = userMessage.fields.values.filter { $0.isRepeated }
    let oneofFields = userMessage.fields.values.filter { $0.oneofIndex != nil }

    if !repeatedFields.isEmpty {
      print("    üîÑ Repeated fields: \(repeatedFields.map { $0.name }.joined(separator: ", "))")
    }

    if !oneofFields.isEmpty {
      print("    üîÄ OneOf fields: \(oneofFields.map { $0.name }.joined(separator: ", "))")
    }
  }

  private static func step3UfieldDescriptorAnalysis() throws {
    ExampleUtils.printStep(3, "–ê–Ω–∞–ª–∏–∑ FieldDescriptor'–æ–≤")

    let fileDescriptor = try createComprehensiveFileStructure()

    guard let userMessage = fileDescriptor.messages.values.first(where: { $0.name == "User" }) else {
      throw NSError(domain: "Example", code: 1, userInfo: [NSLocalizedDescriptionKey: "User message not found"])
    }

    print("  üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–ª–µ–π User:")

    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞–∂–¥–æ–º –ø–æ–ª–µ
    var fieldData: [String: String] = [:]

    for field in userMessage.fields.values.sorted(by: { $0.number < $1.number }) {
      var details: [String] = []

      details.append("Type: \(field.type)")
      details.append("Number: \(field.number)")

      if field.isRepeated {
        details.append("Repeated: ‚úÖ")
      }

      if let oneofIndex = field.oneofIndex {
        details.append("OneOf: group \(oneofIndex)")
      }

      if let typeName = field.typeName, !typeName.isEmpty {
        details.append("TypeName: \(typeName)")
      }

      if let defaultValue = field.defaultValue {
        details.append("Default: \(defaultValue)")
      }

      fieldData[field.name] = details.joined(separator: ", ")
    }

    ExampleUtils.printTable(fieldData, title: "Field Details")

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—è –ø–æ –Ω–æ–º–µ—Ä—É
    if let fieldByNumber = userMessage.fields.values.first(where: { $0.number == 1 }) {
      print("\n  üéØ –ü–æ–ª–µ —Å –Ω–æ–º–µ—Ä–æ–º 1: \(fieldByNumber.name) (\(fieldByNumber.type))")
    }

    // –ê–Ω–∞–ª–∏–∑ message –ø–æ–ª–µ–π
    let messageFields = userMessage.fields.values.filter { $0.type == .message }
    if !messageFields.isEmpty {
      print("\n  üèó  Message fields:")
      for field in messageFields {
        print("      ‚Ä¢ \(field.name) -> \(field.typeName ?? "unknown")")
      }
    }
  }

  private static func step4UenumDescriptorExploration() throws {
    ExampleUtils.printStep(4, "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ EnumDescriptor")

    let fileDescriptor = try createComprehensiveFileStructure()

    guard let statusEnum = fileDescriptor.enums.values.first(where: { $0.name == "UserStatus" }) else {
      throw NSError(domain: "Example", code: 1, userInfo: [NSLocalizedDescriptionKey: "UserStatus enum not found"])
    }

    print("  üè∑  –ê–Ω–∞–ª–∏–∑ enum UserStatus:")

    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± enum
    ExampleUtils.printTable(
      [
        "Name": statusEnum.name,
        "Full Name": statusEnum.fullName,
        "Values Count": "\(statusEnum.allValues().count)",
        "Parent": fileDescriptor.name,
      ],
      title: "Enum Details"
    )

    // –ê–Ω–∞–ª–∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π enum
    print("\n    üìä Enum Values:")
    for enumValue in statusEnum.allValues().sorted(by: { $0.number < $1.number }) {
      print("      \(enumValue.name) = \(enumValue.number)")
    }

    // –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –Ω–æ–º–µ—Ä—É
    if let valueByNumber = statusEnum.allValues().first(where: { $0.number == 1 }) {
      print("\n  üéØ –ó–Ω–∞—á–µ–Ω–∏–µ —Å –Ω–æ–º–µ—Ä–æ–º 1: \(valueByNumber.name)")
    }

    // –ü–æ–∏—Å–∫ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∏–º–µ–Ω–∏
    if let valueByName = statusEnum.allValues().first(where: { $0.name == "ACTIVE" }) {
      print("  üéØ –ó–Ω–∞—á–µ–Ω–∏–µ 'ACTIVE': –Ω–æ–º–µ—Ä \(valueByName.number)")
    }

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è enum –≤ –ø–æ–ª–µ
    guard let userMessage = fileDescriptor.messages.values.first(where: { $0.name == "User" }) else {
      return
    }

    let enumFields = userMessage.fields.values.filter { $0.type == .enum }
    if let statusField = enumFields.first(where: { $0.name == "status" }) {
      print("\n  üîó –ü–æ–ª–µ status —Å–≤—è–∑–∞–Ω–æ —Å enum: \(statusField.typeName ?? "unknown")")
    }
  }

  private static func step5UtypeRelationships() throws {
    ExampleUtils.printStep(5, "–ê–Ω–∞–ª–∏–∑ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–∏–ø–∞–º–∏")

    let fileDescriptor = try createComprehensiveFileStructure()

    print("  üï∏  –ì—Ä–∞—Ñ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ç–∏–ø–æ–≤:")

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    for message in fileDescriptor.messages.values {
      let messageFields = message.fields.values.filter { $0.type == .message }

      if !messageFields.isEmpty {
        print("\n    üìã \(message.name) references:")
        for field in messageFields {
          let referencedType = field.typeName?.components(separatedBy: ".").last ?? "unknown"
          print("      ‚Ä¢ \(field.name) -> \(referencedType)")
        }
      }
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ enums
    print("\n  üè∑  Enum Usage:")
    for message in fileDescriptor.messages.values {
      let enumFields = message.fields.values.filter { $0.type == .enum }

      if !enumFields.isEmpty {
        print("    üìã \(message.name) uses enums:")
        for field in enumFields {
          let enumType = field.typeName?.components(separatedBy: ".").last ?? "unknown"
          print("      ‚Ä¢ \(field.name) -> \(enumType)")
        }
      }
    }

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∏–ø–æ–≤
    var typeUsage: [String: Int] = [:]
    for message in fileDescriptor.messages.values {
      for field in message.fields.values {
        let typeName = "\(field.type)"
        typeUsage[typeName, default: 0] += 1
      }
    }

    print("\n  üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤:")
    for (type, count) in typeUsage.sorted(by: { $0.value > $1.value }) {
      print("      \(type): \(count) fields")
    }

    ExampleUtils.printInfo("–ê–Ω–∞–ª–∏–∑ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π")
  }

  // MARK: - Helper Methods

  private static func createComprehensiveFileStructure() throws -> FileDescriptor {
    var fileDescriptor = FileDescriptor(name: "comprehensive.proto", package: "example")

    // –°–æ–∑–¥–∞–µ–º enum UserStatus
    var userStatusEnum = EnumDescriptor(name: "UserStatus", parent: fileDescriptor)
    userStatusEnum.addValue(EnumDescriptor.EnumValue(name: "UNKNOWN", number: 0))
    userStatusEnum.addValue(EnumDescriptor.EnumValue(name: "ACTIVE", number: 1))
    userStatusEnum.addValue(EnumDescriptor.EnumValue(name: "INACTIVE", number: 2))
    userStatusEnum.addValue(EnumDescriptor.EnumValue(name: "SUSPENDED", number: 3))

    // –°–æ–∑–¥–∞–µ–º enum Priority
    var priorityEnum = EnumDescriptor(name: "Priority", parent: fileDescriptor)
    priorityEnum.addValue(EnumDescriptor.EnumValue(name: "LOW", number: 0))
    priorityEnum.addValue(EnumDescriptor.EnumValue(name: "NORMAL", number: 1))
    priorityEnum.addValue(EnumDescriptor.EnumValue(name: "HIGH", number: 2))
    priorityEnum.addValue(EnumDescriptor.EnumValue(name: "URGENT", number: 3))

    // –°–æ–∑–¥–∞–µ–º Address —Å–æ–æ–±—â–µ–Ω–∏–µ
    var addressDescriptor = MessageDescriptor(name: "Address", parent: fileDescriptor)
    addressDescriptor.addField(FieldDescriptor(name: "street", number: 1, type: .string))
    addressDescriptor.addField(FieldDescriptor(name: "city", number: 2, type: .string))
    addressDescriptor.addField(FieldDescriptor(name: "postal_code", number: 3, type: .string))
    addressDescriptor.addField(FieldDescriptor(name: "country", number: 4, type: .string, defaultValue: "Unknown"))

    // –°–æ–∑–¥–∞–µ–º Contact —Å–æ–æ–±—â–µ–Ω–∏–µ —Å OneOf –ø–æ–ª—è–º–∏
    var contactDescriptor = MessageDescriptor(name: "Contact", parent: fileDescriptor)
    contactDescriptor.addField(FieldDescriptor(name: "email", number: 1, type: .string, oneofIndex: 0))
    contactDescriptor.addField(FieldDescriptor(name: "phone", number: 2, type: .string, oneofIndex: 0))
    contactDescriptor.addField(FieldDescriptor(name: "social_media", number: 3, type: .string, oneofIndex: 0))

    // –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ User —Å–æ–æ–±—â–µ–Ω–∏–µ
    var userDescriptor = MessageDescriptor(name: "User", parent: fileDescriptor)
    userDescriptor.addField(FieldDescriptor(name: "id", number: 1, type: .int64))
    userDescriptor.addField(FieldDescriptor(name: "name", number: 2, type: .string))
    userDescriptor.addField(FieldDescriptor(name: "email", number: 3, type: .string))
    userDescriptor.addField(FieldDescriptor(name: "age", number: 4, type: .int32, defaultValue: Int32(0)))
    userDescriptor.addField(
      FieldDescriptor(
        name: "status",
        number: 5,
        type: .enum,
        typeName: "example.UserStatus",
        defaultValue: Int32(0)
      )
    )
    userDescriptor.addField(
      FieldDescriptor(
        name: "address",
        number: 6,
        type: .message,
        typeName: "example.Address"
      )
    )
    userDescriptor.addField(
      FieldDescriptor(
        name: "contacts",
        number: 7,
        type: .message,
        typeName: "example.Contact",
        isRepeated: true
      )
    )
    userDescriptor.addField(FieldDescriptor(name: "tags", number: 8, type: .string, isRepeated: true))
    userDescriptor.addField(
      FieldDescriptor(
        name: "priority",
        number: 9,
        type: .enum,
        typeName: "example.Priority",
        defaultValue: Int32(1)
      )
    )
    userDescriptor.addField(FieldDescriptor(name: "is_verified", number: 10, type: .bool, defaultValue: false))

    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ç–∏–ø—ã –≤ —Ñ–∞–π–ª
    fileDescriptor.addEnum(userStatusEnum)
    fileDescriptor.addEnum(priorityEnum)
    fileDescriptor.addMessage(addressDescriptor)
    fileDescriptor.addMessage(contactDescriptor)
    fileDescriptor.addMessage(userDescriptor)

    return fileDescriptor
  }
}
